openapi: 3.0.2
info:
  title: Filmogophery
  description: FilmogopheryのAPI
  version: 0.1.0v2025.10.10

servers:
  - url: http://127.0.0.1:8000/v0
    description: ローカル環境（モックデータ）
  - url: http://127.0.0.1:8000/v1
    description: ローカル環境

tags:
  - name: Health
    description: ヘルスチェック
  - name: User
    description: ユーザー
  - name: Movie
    description: 映画
  - name: Review
    description: レビュー
  - name: Watchlist
    description: ウォッチリスト
  - name: Master
    description: マスタデータ

paths:
  /health:
    get:
      tags: [Health]
      summary: ヘルスチェック
      operationId: health
      responses:
        200:
          description: 成功

  /users:
    post:
      tags: [User]
      summary: ユーザー登録
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        201:
          description: 成功

  /movies:
    get:
      tags: [Movie]
      summary: 映画一覧
      operationId: getMovies
      parameters:
        - name: genre
          in: query
          schema:
            type: string
          description: ジャンルコードで絞り込み
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"

  /movies/{id}:
    get:
      tags: [Movie]
      summary: 映画詳細
      operationId: getMovieDetail
      parameters:
        - required: true
          in: path
          name: id
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieDetail"
        404:
          description: 映画が見つからない

  /movies/{id}/reviews:
    post:
      tags: [Review]
      summary: レビュー登録
      operationId: createReview
      parameters:
        - required: true
          in: path
          name: id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReview"
      responses:
        201:
          description: 成功
        404:
          description: 映画が見つからない

  /reviews/{id}:
    put:
      tags: [Review]
      summary: レビュー更新
      operationId: updateReview
      parameters:
        - required: true
          in: path
          name: id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateReview"
      responses:
        204:
          description: 成功
        404:
          description: レビューが見つからない

  /reviews/{id}/history:
    get:
      tags: [Review]
      summary: 視聴履歴一覧
      operationId: getWatchHistory
      parameters:
        - required: true
          in: path
          name: id
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WatchHistory"

    post:
      tags: [Review]
      summary: 視聴履歴追加
      operationId: addWatchHistory
      parameters:
        - required: true
          in: path
          name: id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWatchHistory"
      responses:
        201:
          description: 成功

  /watchlist:
    get:
      tags: [Watchlist]
      summary: ウォッチリスト一覧
      operationId: getWatchlist
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WatchlistItem"

    post:
      tags: [Watchlist]
      summary: ウォッチリスト追加
      operationId: addToWatchlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWatchlistItem"
      responses:
        201:
          description: 成功

  /watchlist/{id}:
    put:
      tags: [Watchlist]
      summary: ウォッチリスト更新
      operationId: updateWatchlistItem
      parameters:
        - required: true
          in: path
          name: id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWatchlistItem"
      responses:
        204:
          description: 成功

    delete:
      tags: [Watchlist]
      summary: ウォッチリストから削除
      operationId: removeFromWatchlist
      parameters:
        - required: true
          in: path
          name: id
          schema:
            type: integer
      responses:
        204:
          description: 成功

  /genres:
    get:
      tags: [Master]
      summary: ジャンル一覧
      operationId: getGenres
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Genre"

  /platforms:
    get:
      tags: [Master]
      summary: プラットフォーム一覧
      operationId: getPlatforms
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Platform"

  /series:
    get:
      tags: [Master]
      summary: シリーズ一覧
      operationId: getSeries
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Series"

components:
  schemas:
    CreateUser:
      type: object
      required: [username, email]
      properties:
        username:
          type: string
        email:
          type: string
          format: email

    Movie:
      title: Movie
      type: object
      properties:
        id:
          description: ID
          type: integer
          example: 1
        title:
          description: 映画タイトル
          type: string
        overview:
          description: 映画概要
          type: string
        releaseDate:
          description: 公開日
          type: string
          format: date
        runtimeMinutes:
          description: 上映時間(分)
          type: integer
        posterURL:
          description: ポスターURL
          type: string
        tmdbID:
          description: tmdbのID
          type: integer
        genres:
          description: ジャンル一覧
          type: array
          items:
            $ref: "#/components/schemas/Genre"

    MovieDetail:
      allOf:
        - $ref: "#/components/schemas/Movie"
        - type: object
          properties:
            series:
              $ref: "#/components/schemas/Series"
            review:
              $ref: "#/components/schemas/Review"
            voteAverage:
              description: 平均評価値
              type: number
              maximum: 5.0
              minimum: 0.0
              example: 3.85
            voteCount:
              description: 平均評価数
              type: integer
              minimum: 0
              example: 12951

    Genre:
      type: object
      properties:
        code:
          description: ジャンルコード
          type: string
        name:
          description: ジャンル名称
          type: string

    Platform:
      type: object
      properties:
        code:
          description: 鑑賞媒体コード
          type: string
        name:
          description: 鑑賞媒体名
          type: string

    Series:
      type: object
      properties:
        name:
          description: シリーズ名
          type: string
        posterURL:
          description: ポスターURL
          type: string

    Review:
      type: object
      properties:
        id:
          type: integer
        rating:
          description: 評価
          type: number
          format: float
        comment:
          description: 感想
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateReview:
      type: object
      properties:
        rating:
          description: 評価
          type: number
          format: float
        comment:
          description: 鑑賞記録
          type: string

    UpdateReview:
      type: object
      properties:
        rating:
          description: 評価
          type: number
          format: float
        comment:
          description: 鑑賞記録
          type: string

    WatchHistory:
      type: object
      properties:
        id:
          type: integer
        platform:
          $ref: "#/components/schemas/Platform"
        watchedAt:
          type: string
          format: date-time

    CreateWatchHistory:
      type: object
      required: [platformId]
      properties:
        platformId:
          type: integer
        watchedAt:
          type: string
          format: date-time

    WatchlistItem:
      type: object
      properties:
        id:
          type: integer
        movie:
          $ref: "#/components/schemas/Movie"
        priority:
          type: integer
        addedAt:
          type: string
          format: date-time

    CreateWatchlistItem:
      type: object
      required: [movieId]
      properties:
        movieId:
          type: integer
        priority:
          type: integer
          default: 1

    UpdateWatchlistItem:
      type: object
      properties:
        priority:
          type: integer
