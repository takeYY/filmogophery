// Code generated by MockGen. DO NOT EDIT.
// Source: filmogophery/internal/app/services (interfaces: ITmdbService)
//
// Generated by this command:
//
//	mockgen -package=mocks -destination=tests/mocks/mock_services.go filmogophery/internal/app/services ITmdbService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	types "filmogophery/internal/app/types"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockITmdbService is a mock of ITmdbService interface.
type MockITmdbService struct {
	ctrl     *gomock.Controller
	recorder *MockITmdbServiceMockRecorder
}

// MockITmdbServiceMockRecorder is the mock recorder for MockITmdbService.
type MockITmdbServiceMockRecorder struct {
	mock *MockITmdbService
}

// NewMockITmdbService creates a new mock instance.
func NewMockITmdbService(ctrl *gomock.Controller) *MockITmdbService {
	mock := &MockITmdbService{ctrl: ctrl}
	mock.recorder = &MockITmdbServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITmdbService) EXPECT() *MockITmdbServiceMockRecorder {
	return m.recorder
}

// GetMovieDetailByID mocks base method.
func (m *MockITmdbService) GetMovieDetailByID(arg0 int32) (*types.TmdbMovieDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMovieDetailByID", arg0)
	ret0, _ := ret[0].(*types.TmdbMovieDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMovieDetailByID indicates an expected call of GetMovieDetailByID.
func (mr *MockITmdbServiceMockRecorder) GetMovieDetailByID(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMovieDetailByID", reflect.TypeOf((*MockITmdbService)(nil).GetMovieDetailByID), arg0)
}
