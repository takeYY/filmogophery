// Code generated by MockGen. DO NOT EDIT.
// Source: filmogophery/internal/app/services (interfaces: IMovieService)
//
// Generated by this command:
//
//	mockgen -package=mocks -destination=tests/mocks/mock_services.go filmogophery/internal/app/services IMovieService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	model "filmogophery/internal/pkg/gen/model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIMovieService is a mock of IMovieService interface.
type MockIMovieService struct {
	ctrl     *gomock.Controller
	recorder *MockIMovieServiceMockRecorder
	isgomock struct{}
}

// MockIMovieServiceMockRecorder is the mock recorder for MockIMovieService.
type MockIMovieServiceMockRecorder struct {
	mock *MockIMovieService
}

// NewMockIMovieService creates a new mock instance.
func NewMockIMovieService(ctrl *gomock.Controller) *MockIMovieService {
	mock := &MockIMovieService{ctrl: ctrl}
	mock.recorder = &MockIMovieServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMovieService) EXPECT() *MockIMovieServiceMockRecorder {
	return m.recorder
}

// GetMovies mocks base method.
func (m *MockIMovieService) GetMovies(ctx context.Context) ([]*model.Movie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMovies", ctx)
	ret0, _ := ret[0].([]*model.Movie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMovies indicates an expected call of GetMovies.
func (mr *MockIMovieServiceMockRecorder) GetMovies(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMovies", reflect.TypeOf((*MockIMovieService)(nil).GetMovies), ctx)
}
